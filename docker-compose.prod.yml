services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    env_file:
      - .env
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: DockerFile
    depends_on:
      - mongodb
      - report_server
      - news_pipeline_server
      - redis
      - research_chat
    env_file:
      - .env
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 60s
      timeout: 20s
      retries: 3

  report_server:
    build:
      context: ./em_research_agentic
      dockerfile: DockerFile
    depends_on:
      - mongodb
    env_file:
      - .env
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 900s
      timeout: 450s
      retries: 2

  news_pipeline_server:
    build:
      context: ./em_news_analysis
      dockerfile: Dockerfile
    depends_on:
      - mongodb
    env_file:
      - .env
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=config/em-news-gdelt.json
    volumes:
      - ./em_news_analysis/config:/app/config
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 360s
      timeout: 180s
      retries: 2

  mongodb:
    image: mongo:latest
    ports:
      - "127.0.0.1:27017:27017"
    volumes:
      - /mnt/volume_nyc1_01/mongodb:/data/db
    command: ["mongod", "--bind_ip", "localhost,mongodb"]

  research_chat:
    build:
      context: ./em_research_chat
      dockerfile: DockerFile
    depends_on:
      - mongodb
    env_file:
      - .env
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 900s
      timeout: 450s
      retries: 2

  redis:
    image: redis:latest
    volumes:
      - /mnt/volume_nyc1_01/redis:/data

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/www:/var/www/certbot:ro
      - ./certbot/conf:/etc/letsencrypt:ro
    depends_on:
      - frontend
      - backend
      - report_server
      - news_pipeline_server
      - research_chat

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    command: certonly --webroot -w /var/www/certbot --force-renewal --email ranaraffay@gmail.com -d nuntiumai.xyz -d www.nuntiumai.xyz --agree-tos --no-eff-email

volumes:
  certbot_data: